plugins {
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id "com.diffplug.spotless" version "6.10.0"}

group = 'com.snaacker.sample'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'com.h2database:h2:2.2.220'
}

tasks.named('test') {
    filter {
        excludeTestsMatching "*EndpointTest"
        excludeTestsMatching "*RepositoryTest"
    }
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    filter{
        includeTestsMatching "*EndpointTest"
        includeTestsMatching "*RepositoryTest"
    }
    useJUnitPlatform()
}

check.dependsOn integrationTest
// Add these START
bootJar {
    archiveClassifier.set('boot')
}


spotless {
    format 'misc', {
        target '*.gradle', '*.md', '.gitignore'
        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        // apply a specific flavor of google-java-format
        googleJavaFormat('1.15.0').aosp().reflowLongStrings()
    }
}

jar {
    archiveClassifier.set('')
}
